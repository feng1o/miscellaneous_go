package main

import (
	"bufio"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"
)

type AutoGenerated struct {
	Instance []struct {
		CdbKafkaEndpoint        string `json:"cdb_kafka_endpoint"`
		CdbKafkaName            string `json:"cdb_kafka_name"`
		CdbKafkaPartition       int    `json:"cdb_kafka_partition"`
		CustomerKafkaNames      string `json:"customer_kafka_names"`
		CustomerKafkaPartitions string `json:"customer_kafka_partitions"`
		CustomerKafkaTopics     string `json:"customer_kafka_topics"`
		Entrance                string `json:"entrance"`
		EsHost                  string `json:"es_host"`
		InstanceID              string `json:"instance_id"`
		LogPath                 string `json:"log_path"`
	} `json:"instance"`
}

/*  https://mholt.github.io/json-to-go/
type AutoGenerated struct {
	Name      string    `json:"Name"`
	Age       int       `json:"Age"`
	Skill     []string  `json:"Skill"`
	SkillType SkillType `json:"SkillType"`
	Cube      Cube      `json:"Cube"`
}
type SkillType struct {
	OS       string `json:"OS"`
	Programa string `json:"programa"`
}
type Cube struct {
	CubeType string `json:"CubeType"`
	High     int    `json:"High"`
	Width    int    `json:"Width"`
	Long     int    `json:"Long"`
}
 */
type Hello struct {
	CubeType string
	High     int
	Width    int
	Long     int
}

type Study struct {
	Name      string
	Age       int
	Skill     []string
	SkillType map[string]string
	Cube *Hello
}

func dropErr(e error) {
	if e != nil {
		panic(e)
	}
}

func main1() {
	fmt.Println("Hello,today we will study Golang read JSON data")

	filePath := os.Args[1]
	fmt.Printf("The file path is :%s\n", filePath)

	fileData, err := ioutil.ReadFile(filePath)
	dropErr(err)
	fmt.Println(string(fileData))

	f, err := os.Open(filePath)
	dropErr(err)
	bio := bufio.NewReader(f)

	bfRead, isPrefix, err := bio.ReadLine()
	dropErr(err)
	fmt.Printf("This mess is  [ %q ] [%v]\n", bfRead, isPrefix)

	res := &Study{}
	json.Unmarshal([]byte(bfRead), &res)
	fmt.Println(res.Cube)

}